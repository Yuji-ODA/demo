plugins {
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.6.10'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.6.10'
    id 'org.jetbrains.kotlin.plugin.lombok' version '1.6.10'
    id 'io.freefair.lombok' version '6.3.0'
    id 'io.github.divinespear.jpa-schema-generate' version '0.4.0'
    id 'project-report'
}

//bootJar {
//    baseName = 'spring-boot-demo'
//    version =  '0.1.0'
//}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
    maven {
        url "https://maven.codelibs.org"
    }
}

test {
    useJUnitPlatform {
        includeEngines 'jqwik'
    }

    include '**/*Properties.class'
    include '**/*Test.class'
    include '**/*Tests.class'
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-security')
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation('com.h2database:h2')
	implementation('mysql:mysql-connector-java')
    implementation('org.codelibs:lucene-analyzers-kuromoji-ipadic-neologd:8.0.0-20190722')
    implementation('org.flywaydb:flyway-core')
    implementation 'org.apache.httpcomponents:httpclient'
    implementation 'io.vavr:vavr:0.10.4'
    implementation 'io.vavr:vavr-jackson:0.10.3'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.13.2'
    implementation 'org.modelmapper.extensions:modelmapper-spring:3.1.0'
    testImplementation('org.springframework.security:spring-security-test')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.junit.jupiter:junit-jupiter-api')
    testImplementation 'io.vavr:vavr-test:0.10.4'
    testImplementation 'org.projectlombok:lombok:1.18.22'
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine')
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    testImplementation 'net.jqwik:jqwik:1.6.5'
    testImplementation 'net.jqwik:jqwik-time:1.6.5'

    runtimeOnly('org.webjars:jquery:3.6.0')
    runtimeOnly('org.webjars.npm:d3:5.9.2')
    runtimeOnly('org.webjars:bootstrap:4.3.1')

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

}
compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
        freeCompilerArgs = ["-Xjsr305=strict"]
    }
//    kotlinOptions.useIR = true
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
        freeCompilerArgs = ["-Xjsr305=strict"]
    }
}

generateSchema {
    vendor = 'hibernate'
    packageToScan = ['com.example.demo.domain.model']
    databaseProductName = 'H2'
    scriptAction = 'drop-and-create'
    jdbcDriver = 'org.h2.Driver'
    jdbcUrl = 'jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE'
    jdbcUser = 'sa'
    properties = [
            'hibernate.dialect': 'org.hibernate.dialect.MySQL57Dialect',
            'hibernate.physical_naming_strategy': 'org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy',
            'hibernate.implicit_naming_strategy': 'org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy'
    ]
}

wrapper {
    gradleVersion = '7.4'
}
